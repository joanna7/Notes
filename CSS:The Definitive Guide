CSS:The Definitive Guide
CSS权威指南

第1章 CSS和文档
	1.
	h1{
		color: maroon;
		font: italic 2em Times,serif;
		text-decoration: underline;
		background: yellow;
	}
	2.每个元素生成一个box
	3.元素的两种形式：替换和非替换
		替换：img(图片) input(单选钮 复选框活文本是输入框)
		非替换：由用户代理(浏览器)在元素本身生成的框中显示
	4.元素两种基本类型：块级block-level  行内inline-level
		block-level 生成一个元素框 在元素框之前和之后产生分隔符(特例：列表元素会额外生成一个标记符，如无序列表中的圆点，有序列表中的数字)
		inline-level 在文本行内生成元素框，不会产生分隔符(a strong em)
		注意：HTML和XHTML中 块级元素不能继承自行内元素(即不能嵌套在行内元素中)，但在CSS中，对于显示角色如何嵌套不存在任何限制
			display例子
			<p>this is a paragraph with <em>an inline element</em> within it.</p>
			p{
				display: inline;
			}
			em{
				display: block;
			}
			em可以继承p，但是反过来不行。行内元素可以继承块元素，块元素不可以继承行内元素
			XHTML中不合法的结构：<em><p>this is a paragraph improperly enclosed by an inline element.</p></em>
	5.Link标记
		<link rel="stylesheet" type="text/css" href="sheet1.css" media="all"/>
		<link rel="stylesheet" type="taxt/css" href="visual-sheet.css" media="screen,projection"/>
		media类型：常用三种：all screen print
		           非常用：aural语音合成 braille embossed handheld手持设备 projection投影设备 tty固定间距设备 tv
		链接到两个CSS样式表,合并它们的样式表，全部应用到文档：
		<link rel="stylesheet" type="text/css" href="basic.css"/>
		<link rel="stylesheet" type="text/css" href="splash.css"/>
		例子：<link rel="stylesheet" type="text/css" href="basic.css"/>
			  <link rel="stylesheet" type="text/css" href="splash.css"/>
			  <p class="al">this paragraph will be gray only if styles from the stylesheet 'basic.css' are applied.</p>
			  <p class="bl">this paragraph will be gray only if styles from the stylesheet 'splash.css' are applied.</p>
			  此处没有link的title属性
	6.候选样式表
		(1)alternate style sheet
			rel 属性改为alternate stylesheet,link元素的title属性产生一个候选样式列表
			<link rel="stylesheet" type="text/css" href="sheet1.css" title="Default"/>
			<link rel="alternate stylesheet" type="text/css" href="bigtext.css" title=" Big Text"/>
			<link rel="alternate stylesheet" type="text/css" href="zany.css" title="Crazy colors!"/>
			可以在浏览器中根据title切换样式表
		(2)title和media的组合
			<link rel="stylesheet" type="text/css" href="sheet1.css" title="Default" media="screen"/>
			<link rel="stylesheet" type="text/css" href="print-sheet1.css" title="Default" media="print"/>
			<link rel="alternate stylesheet" type="text/css" href="bigtext.css" title="Big Text" media="screen"/>
			<link rel="alternate stylesheet" type="text/css" href="print-bigtext.css" title="Big Text" media="print"/>
			首选样式表 永久样式表（没有为样式表指定title）
	7.style元素
		<style type="text/css" media="all"></style> 
		被称为文档样式表document style sheet，或者嵌套样式表embedded style sheet
		(1)@import指令
			@import url(sheet2.css) @import出现在style容器里必须放在其他CSS规则之前，否则没有作用。
			<style type="text/css">@import url(styles.css)
			h1{color: gray;}
			</style>
			所有规则都会显示：
				@import url(sheet2.css);
				@import url(blueworld.css);
				@import url(zany.css);
			媒体：
				@import url(sheet2.css) all;
				@import url(blueworld.css) screen;
				@import url(zany.css) projection,print;
			一个外部样式表要引用其他外部样式表时只能用@import，不可以用link
			@import url(http://example.org/library/layout.css);
			@import url(basic-text.css);
			@import url(printer.css) print;
			body {color:red;}
			h1 {color:blue;}
			如果@import出现在其他规则之后，兼容代理就会将其忽略
		(2)向后可访问性
			浏览器可能无法识别<style></style>,但可识别声明：<!--和-->
			做如此操作则会同时忽略style和声明：
			<style type="text/css">
			<!--@import url(sheet2.css);
			h1{color:maroon;}
			body{background:yellow;}
			-->
			</style>
		(3)CSS注释
			/*this is a css1 comment*/
			可以跨多行，不可以嵌套
	8.内联样式
		inline style
		<p style="color:gray;">The most wonderful of all breakfast foods is the waffle...</p>
		除了在body外部出现的标记，style属性可以与任何其他HTML相关联
		内联样式表只能放一个声明块，不能放样式表，不可以放@import,
第2章 选择器
	1.基本规则
		<h2><font color="gray">this is h2 text</font></h2>
		h2{
			color: gray;
		}
		h2{
			color: silver;
		}
		每个规则都是：选择器和声明块组成。声明由属性和值组成。
		h1{
			color: red;
			background: yellow;
		}
		值：要么是一个关键字，要么是可选关键字的一个列表，关键字之间用空格分隔
		brain-size: 2cm; /*unknown property*/
		color: ultraviolet; /*unknown value*/
		p{
			font: medium Helvetica;
		} 
		用/区分关键字的特例：h2{font: large/150% sans-serif;}		
	2.元素选择器
		XML中：什么都可以是选择器 QUOTE{color: gray;}
								  BIB{color: red;}
								  BOOKTITLE{color: purple;}
								  MYElement{color: red;}
		HTML中：选择器是HTML元素  html{color: red;}
								  h1{color: black;}
								  h2{color: silver;}
	3.分组
		(1)选择器分组
		 h2,p{color: gray;} 规则中两个不同的选择器要用逗号
		 body,table,th,td,h1,h2,h3,h4,p,pre,strong,em,b,i,{color: gray;}
		 /* group 1*/
		 h1{color: silver; background: white;}
		 h2{color: silver; background: gray;}
		 h3{color: white; background: gray}
		 h4{color: silver; background: white;}
		 b{color: gray; background: white;}
		 /* group 2*/
		 h1,h2,h4{color: silver;}
         h3{color: white;}
		 b{color: gray;}
		 h1,h4,b{background: white;}
		 h2,h3{background: gray;}
		 /* group 3*/
		 h1,h4{color: silver; background: white;}
		 h2,h3{background: gray;}
		 h2{color: silver;}
		 h3{color: white;}
		 b{color: gray; background: white;}
		(2)通配器选择
		 *{color: red;}
		(3)声明分组
		 h1{
		 	font: 18px Helvetica;
		 	color: purple;
		 	background: aqua;
		 }
		(4)组合选择器和声明的分组
		 h1,h2,h3,h4,h5,h6{
		 	color: gray;
		 	background: white;
		 	padding: 0.5em;
		 	border: 1px solid black;
		 	font-family: Charcoal,sans-serif;
		 	}
 	4.类选择器和ID选择器
 	 	都是区分大小写的
 		(1)类选择器
 		 <p class="warning">1</p>
 		 <p>2<span class="warning">3</span>4</p>
 		 *.warning{font-weight: bold;}
 		 p.warining{font-weight: bold;} class属性包含词warning的所有段落
 		 span.warning{font-style: italic;} 警告span会变成斜体
 		 .warning{font-style: italic;} 所有警告都会变成斜体
 		 span.warning{font-weight: bold;}警告span会变成粗体
 		(2)多类选择器
 		 class中包含词列表
 		 <p class="warning urgent"></p> 类名用空格分隔
 		 <span class="urgent warning"></span>
 		 两个类的顺序无关紧要
 		 .warning{font-weight: bold;}
 		 .urgent{font-style: italic;}
 		 .warning.urgent{background: silver;}
 		 例子：p.warning.help{background: red;}
 		 	   能匹配<p class="urgent warning help"></p>
 		 	         <p class="warning help"></p>
 		 	         <p class="help warning"></p>
 		 	   不能匹配：<p class="warning"></p>
 		 	             <p class="help"></p>
 		(3)ID选择器
 		 *#first-para{font-weight: bold;}
 		 #first-para{font-weight: bold;}
 		 ID值唯一
 		 ID选择器不能结合使用，不允许有以空格分隔的词列表
 	5.属性选择器
 		(1)简单属性选择
 		 只是选择class属性，值不限制
 		 h1[class]{color: silver;}
 		 <h1 class="hoopla">hello</h1>
 		 <h1 class="severe">severe</h1>
 		 <h1 class="fancy">fancy</h1>
 		 所有moons属性的所有planet元素
 		 planet[moons]{font-weight: bold;}
 		 img[alt]{border: 3px solid red;}
 		 *[title]{font-weight: bold;}
 		 a[href][title]{font-weight: bold;}同时将有href和title属性的HTML超链接文本设置为粗体
 		 <a href="http://www.w3.org/" title="w3c home">w3c</a>
 		(2)根据具体属性值选择
 		 planet[moons="1"]{font-weight: bold;}
 		 <planet>venus</planet>
 		 <planet moons="1"></planet>
 		 a[href="http://www.w3.org/"][title="w3c home"]{font-size" 200%;}
 		 特例：值本身就有一个空格
 		 <planet type="barren rocky">mercury</planet>
 		 唯一表达方式 planet[type="barren rocky"]{font-weight: bold;}
 		 完全串匹配：<p class="urgent warning">when the</p>
 		            p[class="urgent warning"]{font-weight: bold;}urgent在前，warning在后，有一个空格
 		(3)根据部分属性值选择
 		 <p class="urgent warning">when the</p>
 		 class属性中包含warning
 		 p[class~=:"warning"]{font-weight: bold;}
 		 ~=包含，不仅仅是用于class，可以用于任何属性
 		 p.warning和p[class~="warning"]应用到HTML中是等价的
 		 img[title~="Figure"]border{1px solid gray;}
                 子串匹配属性选择器：也可用于IE7
 		 <span class="barren rocky">mercury</span>
 		 <span class="cloudy barren">venus</span>
 		 <span class="life-bearing cloudy">earth</span>
 		 span[class*="cloud"]{font-style: italic;}
 		 span[class^="bar"]{background: silver;}
 		 span[class$="y"]{font-weight: bold;}
 		 a[href*="oreilly"]{font-weight: bold;}
 		 img[src*"space"]{border: 5px solid red;}
 		(4)特定属性选择类型
 		 *[lang|="en"]{color: white;}
 		 lang属性等于en或者以en-开头的所有元素
 		 包括：<h1 lang="en">hello!</h1>
 		 	   <p lang="en-us">greenting</p>
 		 	   <div lang="en-au">yeah</div>
 		 不包括：<p lang="fr">bonjure</p>
 		 		 <h4 lang="cy-en">jon</h4>
 		 一般[att|"val"]可以用于任何属性及其值
 		 如果图片名为figure-1.gif,figure-2.gif,则
 		 img[src|="figure"]{border: 1px solid gray;}
 	6.使用文档结构












附录：本书中需要区别对待的IE浏览器部分
1
2.IE不会忽略@import的任何指令






		

